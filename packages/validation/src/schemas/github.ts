import z from "zod"

const githubUserResponseSchema = z.object({
    login: z.string(),
    id: z.number(),
    node_id: z.string(),
    avatar_url: z.string(),
    gravatar_id: z.string(),
    url: z.string(),
    html_url: z.string(),
    followers_url: z.string(),
    following_url: z.string(),
    gists_url: z.string(),
    starred_url: z.string(),
    subscriptions_url: z.string(),
    organizations_url: z.string(),
    repos_url: z.string(),
    events_url: z.string(),
    received_events_url: z.string(),
    type: z.string(),
    user_view_type: z.string(),
    site_admin: z.boolean(),
    name: z.string(),
    company: z.any(),
    blog: z.string(),
    location: z.string(),
    email: z.any(),
    hireable: z.boolean(),
    bio: z.string(),
    twitter_username: z.string(),
    public_repos: z.number(),
    public_gists: z.number(),
    followers: z.number(),
    following: z.number(),
    created_at: z.string(),
    updated_at: z.string()
})

const ownerSchema = z.object({
    login: z.string(),
    id: z.number(),
    node_id: z.string(),
    avatar_url: z.string(),
    gravatar_id: z.string(),
    url: z.string(),
    html_url: z.string(),
    followers_url: z.string(),
    following_url: z.string(),
    gists_url: z.string(),
    starred_url: z.string(),
    subscriptions_url: z.string(),
    organizations_url: z.string(),
    repos_url: z.string(),
    events_url: z.string(),
    received_events_url: z.string(),
    type: z.string(),
    user_view_type: z.string(),
    site_admin: z.boolean()
})

const githubUserReposSchema = z.object({
    id: z.number(),
    node_id: z.string(),
    name: z.string(),
    full_name: z.string(),
    private: z.boolean(),
    owner: ownerSchema,
    html_url: z.string(),
    description: z.any(),
    fork: z.boolean(),
    url: z.string(),
    forks_url: z.string(),
    keys_url: z.string(),
    collaborators_url: z.string(),
    teams_url: z.string(),
    hooks_url: z.string(),
    issue_events_url: z.string(),
    events_url: z.string(),
    assignees_url: z.string(),
    branches_url: z.string(),
    tags_url: z.string(),
    blobs_url: z.string(),
    git_tags_url: z.string(),
    git_refs_url: z.string(),
    trees_url: z.string(),
    statuses_url: z.string(),
    languages_url: z.string(),
    stargazers_url: z.string(),
    contributors_url: z.string(),
    subscribers_url: z.string(),
    subscription_url: z.string(),
    commits_url: z.string(),
    git_commits_url: z.string(),
    comments_url: z.string(),
    issue_comment_url: z.string(),
    contents_url: z.string(),
    compare_url: z.string(),
    merges_url: z.string(),
    archive_url: z.string(),
    downloads_url: z.string(),
    issues_url: z.string(),
    pulls_url: z.string(),
    milestones_url: z.string(),
    notifications_url: z.string(),
    labels_url: z.string(),
    releases_url: z.string(),
    deployments_url: z.string(),
    created_at: z.string(),
    updated_at: z.string(),
    pushed_at: z.string(),
    git_url: z.string(),
    ssh_url: z.string(),
    clone_url: z.string(),
    svn_url: z.string(),
    homepage: z.any(),
    size: z.number(),
    stargazers_count: z.number(),
    watchers_count: z.number(),
    language: z.any(),
    has_issues: z.boolean(),
    has_projects: z.boolean(),
    has_downloads: z.boolean(),
    has_wiki: z.boolean(),
    has_pages: z.boolean(),
    has_discussions: z.boolean(),
    forks_count: z.number(),
    mirror_url: z.any(),
    archived: z.boolean(),
    disabled: z.boolean(),
    open_issues_count: z.number(),
    license: z.any(),
    allow_forking: z.boolean(),
    is_template: z.boolean(),
    web_commit_signoff_required: z.boolean(),
    topics: z.array(z.any()),
    visibility: z.string(),
    forks: z.number(),
    open_issues: z.number(),
    watchers: z.number(),
    default_branch: z.string()
})

export { githubUserResponseSchema, githubUserReposSchema }